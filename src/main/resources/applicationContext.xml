<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入-->
    <context:component-scan base-package="com.coderdream.dao" />
    <context:component-scan base-package="com.coderdream.service" /> 

    <!-- 数据库配置 -->
    <bean id="databaseConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </bean>

    <!-- 配置数据源 -->
    <!-- 配置数据源 -->
    <!-- data source 基本的连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="${url}" />
        <property name="user" value="${username}" />
        <property name="password" value="${password}" />
        <!-- 以下参数是根据SAE情况配置 -->
        <property name="maxPoolSize" value="20" />
        <property name="minPoolSize" value="5" />
        <property name="maxStatements" value="200" />
        <property name="initialPoolSize" value="5" />
        <property name="maxIdleTime" value="15" />
        <property name="idleConnectionTestPeriod" value="5" />
        <property name="testConnectionOnCheckin" value="false" />
        <property name="testConnectionOnCheckout" value="false" />
        <property name="preferredTestQuery" value="SELECT 1 FROM DUAL" />
    </bean>

    <!-- 配置Jdbc模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
        p:dataSource-ref="dataSource" />

    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <value>
                hibernate.hbm2ddl.auto=update
                hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
                hibernate.show_sql=true
                hibernate.format_sql=true
                hibernate.cache.use_query_cache=false
                hibernate.cache.use_second_level_cache=false
                <!-- hibernate.cache.use_structured_entries=true hibernate.cache.region_prefix=quality.cache.ehcache 
                    hibernate.cache.provider_class=com.googlecode.hibernate.memcached.MemcachedCacheProvider 
                    hibernate.memcached.servers=${roamer.hibernate.memcached.servers} hibernate.memcached.cacheTimeSeconds=1800 -->
            </value>
        </property>
        <!-- 
        <property name="packagesToScan">
            <list>
                <value>com.coderdream.dao</value>
                <value>com.coderdream.service</value>
            </list>
        </property> -->
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 -->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceMethod"
            expression=" execution(* com.coderdream.service..*(..))" />
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

</beans>